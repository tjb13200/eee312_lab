###############################################################################
#
# IAR C/C++ Compiler V6.30.2.940/W32 for MSP430           19/Nov/2015  14:57:43
# Copyright 1996-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 6.30
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  
#        H:\My Documents\EE312\TemplateCode\eee312_lab\Lab 2\main.c
#    Command line  =  
#        "H:\My Documents\EE312\TemplateCode\eee312_lab\Lab 2\main.c" -lcN
#        "H:\My Documents\EE312\TemplateCode\eee312_lab\Lab 2\Debug\List\" -o
#        "H:\My Documents\EE312\TemplateCode\eee312_lab\Lab 2\Debug\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        -D__MSP430FR4133__ -e --double=32 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.2\430\lib\dlib\dl430xlsfn.h" -I
#        "H:\My Documents\EE312\TemplateCode\eee312_lab\Lab 2\..\" -I "H:\My
#        Documents\EE312\TemplateCode\eee312_lab\Lab
#        2\..\driverlib\MSP430FR2xx_4xx\" --core=430X --data_model=small -On
#        --hw_workaround=CPU40 --segment __data16=DATA16 --segment
#        __data20=DATA20 --code_model=large
#    List file     =  
#        H:\My Documents\EE312\TemplateCode\eee312_lab\Lab
#        2\Debug\List\main.lst
#    Object file   =  
#        H:\My Documents\EE312\TemplateCode\eee312_lab\Lab 2\Debug\Obj\main.r43
#
###############################################################################

H:\My Documents\EE312\TemplateCode\eee312_lab\Lab 2\main.c
      1          /**************************************************
      2           * EE312 Lab 2
      3           *
      4           * Copyright 2015 University of Strathclyde
      5           *
      6           *
      7           **************************************************/
      8          #include <msp430.h>
      9          #include <driverlib.h>
     10          #include "LedDriver.h"
     11          
     12          int main(void)
     13          {
     14            //Default MCLK = 1MHz
     15            
     16            unsigned int i = 0;
     17            unsigned char dialValue = 0x00;
     18            unsigned char buttonValue;
     19            unsigned char dialDirection = 0x00;
     20            WDTCTL = WDTPW | WDTHOLD;               // Stop watchdog timer
     21          
     22            initialiseLedDial();
     23            
     24            //switch
     25             GPIO_setAsInputPinWithPullUpResistor(GPIO_PORT_P1, GPIO_PIN3);
     26             
     27            // Disable the GPIO power-on default high-impedance mode
     28            // to activate previously configured port settings
     29            PMM_unlockLPM5();
     30          
     31            while(1)
     32            {buttonValue =  GPIO_getInputPinValue(GPIO_PORT_P1, GPIO_PIN3);
     33                 if (!buttonValue)  
     34                 {
     35                   dialDirection ^=0x01;
     36                 }
     37                 
     38                 if (dialDirection == 0x00)
     39                 {
     40                 
     41                dialValue = dialValue + 0x01;
     42                
     43                if(0x09 == dialValue)
     44                   dialValue = 0x01;
     45                 }
     46                 
     47                if (dialDirection == 0x01)
     48                 {
     49          
     50                  dialValue = dialValue - 0x01;
     51                
     52                if(0x00 == dialValue)
     53                   dialValue = 0x08;
     54                }
     55              //Set value
     56              setLedDial(dialValue);
     57              
     58              //Refresh display (10 times for each position)
     59              for(i = 0; i < 10; i++)
     60                refreshLedDial();
     61          
     62            }
     63            }
     64            

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
     12   main
       12   -> GPIO_getInputPinValue
       12   -> GPIO_setAsInputPinWithPullUpResistor
       12   -> PMM_unlockLPM5
       12   -> initialiseLedDial
       12   -> refreshLedDial
       12   -> setLedDial


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       2  _A_WDTCTL_L
      96  main

 
 96 bytes in segment CODE
  2 bytes in segment DATA16_AN
 
 96 bytes of CODE memory
  0 bytes of DATA memory (+ 2 bytes shared)

Errors: none
Warnings: none
